services:
  frontend:
    image: teamofey/dcc-frontend:1.2
    container_name: frontend
    restart: always
    expose:
      - "80"
    networks:
      - frontend-network

  backend:
    image: teamofey/dcc-backend:latest
    container_name: backend
    restart: always
    expose:
      - "9667"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      dcc-pg:
        condition: service_healthy
    networks:
      - app-network

  dcc-pg:
    image: postgres:17.4
    container_name: dcc-pg
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
    networks:
      - frontend-network
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot-renew
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot --webroot-path=/var/www/certbot; done"
    networks:
      - frontend-network

volumes:
  postgres_data:

networks:
  frontend-network:
    driver: bridge
  app-network:
    driver: bridge
